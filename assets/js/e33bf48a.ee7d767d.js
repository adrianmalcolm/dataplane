"use strict";(self.webpackChunk_grafana_dataplane_website=self.webpackChunk_grafana_dataplane_website||[]).push([[78],{876:(t,e,l)=>{l.d(e,{Zo:()=>p,kt:()=>c});var n=l(2784);function a(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function r(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function u(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?r(Object(l),!0).forEach((function(e){a(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function o(t,e){if(null==t)return{};var l,n,a=function(t,e){if(null==t)return{};var l,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||(a[l]=t[l]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(a[l]=t[l])}return a}var i=n.createContext({}),s=function(t){var e=n.useContext(i),l=e;return t&&(l="function"==typeof t?t(e):u(u({},e),t)),l},p=function(t){var e=s(t.components);return n.createElement(i.Provider,{value:e},t.children)},d="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var l=t.components,a=t.mdxType,r=t.originalType,i=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),d=s(l),k=a,c=d["".concat(i,".").concat(k)]||d[k]||m[k]||r;return l?n.createElement(c,u(u({ref:e},p),{},{components:l})):n.createElement(c,u({ref:e},p))}));function c(t,e){var l=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=l.length,u=new Array(r);u[0]=k;var o={};for(var i in e)hasOwnProperty.call(e,i)&&(o[i]=e[i]);o.originalType=t,o[d]="string"==typeof t?t:a,u[1]=o;for(var s=2;s<r;s++)u[s]=l[s];return n.createElement.apply(null,u)}return n.createElement.apply(null,l)}k.displayName="MDXCreateElement"},5802:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>i,contentTitle:()=>u,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=l(7896),a=(l(2784),l(876));const r={},u="Heatmap",o={unversionedId:"heatmap",id:"heatmap",title:"Heatmap",description:"Status: EARLY Draft/Proposal",source:"@site/../../docs/contract/heatmap.md",sourceDirName:".",slug:"/heatmap",permalink:"/dataplane/heatmap",draft:!1,editUrl:"https://github.com/grafana/dataplane/edit/main/docusaurus/website/../../docs/contract/heatmap.md",tags:[],version:"current",frontMatter:{},sidebar:"doc",previous:{title:"Logs",permalink:"/dataplane/logs"}},i={},s=[{value:"Heatmap Rows (HeatmapRows)",id:"heatmap-rows-heatmaprows",level:2},{value:"Heatmap cells (HeatmapCells)",id:"heatmap-cells-heatmapcells",level:2},{value:"Sparse heatmaps",id:"sparse-heatmaps",level:3}],p={toc:s},d="wrapper";function m(t){let{components:e,...l}=t;return(0,a.kt)(d,(0,n.Z)({},p,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"heatmap"},"Heatmap"),(0,a.kt)("p",null,"Status: EARLY Draft/Proposal"),(0,a.kt)("p",null,"Heatmaps are used to show the magnitude of a phenomenon as color in two dimensions. The variation in color may give visual cues about how the phenomenon is clustered or varies over space."),(0,a.kt)("h2",{id:"heatmap-rows-heatmaprows"},"Heatmap Rows (HeatmapRows)"),(0,a.kt)("p",null,"Version: 0.0"),(0,a.kt)("p",null,"The first field represents the X axis, the rest of the fields indicate rows in the heatmap.",(0,a.kt)("br",{parentName:"p"}),"\n",'The true numeric range of each row can be indicated using an "le" label. When absent,\nThe field display is used for the row label.'),(0,a.kt)("p",null,"Example:"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Time"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: Time")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Number"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: "),(0,a.kt)("br",null),(0,a.kt)("strong",null,'Labels: {"le":',(0,a.kt)("em",null,' "10"'),"}")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Number"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: "),(0,a.kt)("br",null),(0,a.kt)("strong",null,'Labels: {"le":',(0,a.kt)("em",null,' "20"'),"}")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Number"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: "),(0,a.kt)("br",null),(0,a.kt)("strong",null,'Labels: {"le":',(0,a.kt)("em",null,' "+Inf"'),"}"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:51"),(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"7"),(0,a.kt)("td",null,"8")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:51"),(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"7"),(0,a.kt)("td",null,"8")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:51"),(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"7"),(0,a.kt)("td",null,"8"))),(0,a.kt)("p",null,"Note: ",(0,a.kt)("a",{parentName:"p",href:"/dataplane/timeseries#time-series-wide-format-timeserieswide"},"Timeseries wide")," can be used directly\nas heatmap-rows, in this case each value field becomes a row in the heatmap."),(0,a.kt)("h2",{id:"heatmap-cells-heatmapcells"},"Heatmap cells (HeatmapCells)"),(0,a.kt)("p",null,"Version: 0.0"),(0,a.kt)("p",null,"In this format, each row in the frame indicates the value of a single cell in a heatmap.\nThere exists a row for every cell in the heatmap."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Time"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: xMax|xMin|x")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Number"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: yMax|yMin|y")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Number"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: Count")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Number"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: Total")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Type: Number"),(0,a.kt)("br",null),(0,a.kt)("strong",null,"Name: Speed"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:51"),(0,a.kt)("td",null,"100"),(0,a.kt)("td",null,"1"),(0,a.kt)("td",null,"1"),(0,a.kt)("td",null,"1")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:51"),(0,a.kt)("td",null,"200"),(0,a.kt)("td",null,"2"),(0,a.kt)("td",null,"2"),(0,a.kt)("td",null,"2")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:51"),(0,a.kt)("td",null,"300"),(0,a.kt)("td",null,"3"),(0,a.kt)("td",null,"3"),(0,a.kt)("td",null,"3")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:52"),(0,a.kt)("td",null,"100"),(0,a.kt)("td",null,"4"),(0,a.kt)("td",null,"4"),(0,a.kt)("td",null,"4")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:52"),(0,a.kt)("td",null,"200"),(0,a.kt)("td",null,"5"),(0,a.kt)("td",null,"5"),(0,a.kt)("td",null,"5")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2022-05-24 18:19:52"),(0,a.kt)("td",null,"300"),(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"6"))),(0,a.kt)("p",null,"This format requires uniform cell sizing. The size of the cell is defined by the columns in each row that are chosen as the xMax|xMin|x and the yMax|yMin|y. We can see that the Number column(yMax|yMin|y) increases by 100(each cell is roughly 100 higher than the previous cell on the y axis) for each row containing a similar Time value(these stacked cells all have roughly the same location along the x axis). This produces a uniform cell size."),(0,a.kt)("p",null,'Note that multiple "value" fields can included to represent multiple dimensions within the same cell.',(0,a.kt)("br",{parentName:"p"}),"\n","The first value field is used in the display, unless explicitly configured"),(0,a.kt)("p",null,"The field names for yMax|yMin|y indicate the aggregation period or the supplied values."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"yMax: the values are from the bucket below"),(0,a.kt)("li",{parentName:"ul"},"yMin: the values are from to bucket above"),(0,a.kt)("li",{parentName:"ul"},"y: the values are in the middle of the bucket")),(0,a.kt)("h3",{id:"sparse-heatmaps"},"Sparse heatmaps"),(0,a.kt)("p",null,"When both min+max fields exist for X and/or Y, the dimension does not need to be uniformly distributed. For high resolution with many gaps this approach can be smaller and more efficient."))}m.isMDXComponent=!0}}]);